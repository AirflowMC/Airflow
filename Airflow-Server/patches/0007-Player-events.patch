From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: GliczDev <67753196+GliczDev@users.noreply.github.com>
Date: Sun, 1 Sep 2024 16:14:44 +0200
Subject: [PATCH] Player events


diff --git a/net/minecraft/server/network/ServerGamePacketListenerImpl.java b/net/minecraft/server/network/ServerGamePacketListenerImpl.java
index 29a4ee25c8a3952e9d4c647114636f05a24c16cb..524f7f0152c27ec450ebe2c3ea1cbef23977cad1 100644
--- a/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -1184,11 +1184,22 @@ public class ServerGamePacketListenerImpl
     private void removePlayerFromWorld() {
         this.chatMessageChain.close();
         this.server.invalidateStatus();
+        // Airflow start - Player events
+        /*
         this.server
             .getPlayerList()
             .broadcastSystemMessage(Component.translatable("multiplayer.player.left", this.player.getDisplayName()).withStyle(ChatFormatting.YELLOW), false);
+         */
+        // Airflow end - Player events
         this.player.disconnect();
-        this.server.getPlayerList().remove(this.player);
+        // Airflow start - Player events
+        Component message = this.server.getPlayerList().remove(this.player);
+        if (message != null) {
+            this.server
+                    .getPlayerList()
+                    .broadcastSystemMessage(message, false);
+        }
+        // Airflow end - Player events
         this.player.getTextFilter().leave();
     }
 
diff --git a/net/minecraft/server/players/PlayerList.java b/net/minecraft/server/players/PlayerList.java
index 53d6d038c7f9a70a584b5dc4709fa02707ef7041..6a45b47f71e7476b5c19492fb3e4195278b0e41e 100644
--- a/net/minecraft/server/players/PlayerList.java
+++ b/net/minecraft/server/players/PlayerList.java
@@ -213,8 +213,8 @@ public abstract class PlayerList {
         } else {
             mutableComponent = Component.translatable("multiplayer.player.joined.renamed", player.getDisplayName(), string);
         }
+        mutableComponent.withStyle(ChatFormatting.YELLOW); // Airflow - Player events
 
-        this.broadcastSystemMessage(mutableComponent.withStyle(ChatFormatting.YELLOW), false);
         serverGamePacketListenerImpl.teleport(player.getX(), player.getY(), player.getZ(), player.getYRot(), player.getXRot());
         ServerStatus status = this.server.getStatus();
         if (status != null && !cookie.transferred()) {
@@ -225,6 +225,14 @@ public abstract class PlayerList {
         this.players.add(player);
         this.playersByUUID.put(player.getUUID(), player);
         this.broadcastAll(ClientboundPlayerInfoUpdatePacket.createPlayerInitializing(List.of(player)));
+        // Airflow start - Player events
+        me.glicz.airflow.api.event.player.PlayerJoinEvent event = this.server.getDedicatedServer().airflow.serverEventBus.dispatchPlayerJoin(player, mutableComponent);
+
+        Component message = me.glicz.airflow.util.MinecraftComponentSerializer.INSTANCE.serializeOrNull(event.getMessage());
+        if (message != null) {
+            this.broadcastSystemMessage(message, false);
+        }
+        // Airflow end - Player events
         this.sendLevelInfo(player, serverLevel);
         serverLevel.addNewPlayer(player);
         this.server.getCustomBossEvents().onPlayerConnect(player);
@@ -317,9 +325,22 @@ public abstract class PlayerList {
         }
     }
 
-    public void remove(ServerPlayer player) {
+    public Component remove(ServerPlayer player) { // Aiflow - Player events
         ServerLevel serverLevel = player.serverLevel();
         player.awardStat(Stats.LEAVE_GAME);
+        // Airflow start - Player events
+        if (player.containerMenu != player.inventoryMenu) {
+            player.closeContainer();
+        }
+
+        me.glicz.airflow.api.event.player.PlayerQuitEvent event = player.server.getDedicatedServer().airflow.serverEventBus.dispatchPlayerQuit(
+                player,
+                Component.translatable("multiplayer.player.left", player.getDisplayName())
+                        .withStyle(ChatFormatting.YELLOW)
+        );
+
+        player.doTick();
+        // Airflow end - Player events
         this.save(player);
         if (player.isPassenger()) {
             Entity rootVehicle = player.getRootVehicle();
@@ -349,6 +370,7 @@ public abstract class PlayerList {
         }
 
         this.broadcastAll(new ClientboundPlayerInfoRemovePacket(List.of(player.getUUID())));
+        return me.glicz.airflow.util.MinecraftComponentSerializer.INSTANCE.serializeOrNull(event.getMessage()); // Airflow - Player events
     }
 
     @Nullable
